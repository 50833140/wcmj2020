<h1>W6-W9</h1>
<h2>Online education</h2>
<p>線上直播: Youtube + Portable OBS</p>
<p>線上開會:<span> </span><a href="https://meet.google.com/">https://meet.google.com</a> </p>
<h2>讓手機可以利用電腦熱點上網</h2>
<p><span>採用 </span><a href="https://www.tp-link.com/us/home-networking/usb-adapter/tl-wn725n/">https://www.tp-link.com/us/home-networking/usb-adapter/tl-wn725n/</a></p>
<h1>W8</h1>
<p>請重新下載<span> </span><a href="https://drive.google.com/open?id=1xDTDfcHU18ipqZNbOufMkSZqibqNeL2T">wcmj2020_tool.7z</a>, 檔案大小為 435 MB, 解開壓縮後為 1.8 GB (其中包括 Mypaint, Dia 與 OBS 等).</p>
<p>學會利用 ShareX 與 OBS 拍攝螢幕操作影片, 並將個人維護倉儲與網站的過程影片放入個人網站中.</p>
<h1>W9</h1>
<h6><a href="https://drive.google.com/file/d/1mqtHKdD2EDJjUvfs76T1-Cs0OwXVJtvO/view?usp=sharing">wcmj2020 W9 第一段影片</a></h6>
<p><br/><br/><br/><br/></p>
<h1>W10</h1>
<h6>public公開密鑰加密</h6>
<p>cryptography編碼學</p>
<p>ssh安全編碼機制</p>
<p>putty:The free ssh for window</p>
<p>設置:移動鼠標</p>
<p>private key</p>
<h1>W12</h1>
<p><a href="https://drive.google.com/open?id=1d_YpSrTdKLPKZjkHW2TNsbHRU1ePNRFl">Leo Editor 與 Pelican blog 使用說明影片</a></p>
<h1>W13</h1>
<p>Pelican Blog 內容與 Google Blogger 同步</p>
<p><a href="https://drive.google.com/open?id=1vpNOyew4ts78nuJ50-CiE26WSk0YxOV7">W13  利用 Leo Editor 按鈕處理同步說明影片</a></p>
<p><a href="https://drive.google.com/open?id=1I5fLwnRSeDPaSdXkrartxERICHKgmD20">教學影片-2</a></p>
<p><a href="https://drive.google.com/open?id=1hqD5j0H37OWb2k4PQAcQ5aFPAzJrnBQB">教學影片-3</a></p>
<p>利用 Windows 10 設定 -&gt; 選擇預設網頁瀏覽器, 使用 Google Chrome 作為預設瀏覽器.</p>
<p>隨身程式系統必須安裝 <span>google-api-python-client 與 oauth2client</span><br/><br/>pip install google-api-python-client oauth2client<br/><br/>OAuth 2.0 client IDs 程式類別可以選擇 Desktop app<br/><br/>使用者完成 client_secrets.json 設定後, 必須將檔案存在倉儲目錄外部</p>
<p>將 client_secrets.json 轉為 credential_token.dat 的程式:</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_107526">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py decorator">@language</code> <code class="py plain">python</code></div>
<div class="line number2 index1 alt1"><code class="py comments"># https://developers.google.com/blogger/docs/3.0/using</code></div>
<div class="line number3 index2 alt2"><code class="py comments"># under Mac command + b to execute</code></div>
<div class="line number4 index3 alt1"><code class="py keyword">import</code> <code class="py plain">pickle</code></div>
<div class="line number5 index4 alt2"><code class="py keyword">import</code> <code class="py plain">os</code></div>
<div class="line number6 index5 alt1"><code class="py keyword">from</code> <code class="py plain">googleapiclient.discovery </code><code class="py keyword">import</code> <code class="py plain">build</code></div>
<div class="line number7 index6 alt2"><code class="py keyword">from</code> <code class="py plain">google_auth_oauthlib.flow </code><code class="py keyword">import</code> <code class="py plain">InstalledAppFlow</code></div>
<div class="line number8 index7 alt1"> </div>
<div class="line number9 index8 alt2"> </div>
<div class="line number10 index9 alt1"><code class="py plain">SCOPES </code><code class="py keyword">=</code> <code class="py plain">[</code><code class="py string">'https://www.googleapis.com/auth/blogger'</code><code class="py plain">, ]</code></div>
<div class="line number11 index10 alt2"> </div>
<div class="line number12 index11 alt1"><code class="py comments"># we check if the file tBo store the credentials exists</code></div>
<div class="line number13 index12 alt2"><code class="py keyword">if</code> <code class="py keyword">not</code> <code class="py plain">os.path.exists(</code><code class="py string">'./../../yen_gm_blogger_token.dat'</code><code class="py plain">):</code></div>
<div class="line number14 index13 alt1"> </div>
<div class="line number15 index14 alt2"><code class="py spaces">    </code><code class="py plain">flow </code><code class="py keyword">=</code> <code class="py plain">InstalledAppFlow.from_client_secrets_file(</code><code class="py string">'./../../yen_gm_blogger_secrets.json'</code><code class="py plain">, SCOPES)</code></div>
<div class="line number16 index15 alt1"><code class="py spaces">    </code><code class="py plain">credentials </code><code class="py keyword">=</code> <code class="py plain">flow.run_local_server()</code></div>
<div class="line number17 index16 alt2"> </div>
<div class="line number18 index17 alt1"><code class="py spaces">    </code><code class="py plain">with </code><code class="py functions">open</code><code class="py plain">(</code><code class="py string">'./../../yen_gm_blogger_token.dat'</code><code class="py plain">, </code><code class="py string">'wb'</code><code class="py plain">) as credentials_dat:</code></div>
<div class="line number19 index18 alt2"><code class="py spaces">        </code><code class="py plain">pickle.dump(credentials, credentials_dat)</code></div>
<div class="line number20 index19 alt1"><code class="py keyword">else</code><code class="py plain">:</code></div>
<div class="line number21 index20 alt2"><code class="py spaces">    </code><code class="py plain">with </code><code class="py functions">open</code><code class="py plain">(</code><code class="py string">'./../../yen_gm_blogger_token.dat'</code><code class="py plain">, </code><code class="py string">'rb'</code><code class="py plain">) as credentials_dat:</code></div>
<div class="line number22 index21 alt1"><code class="py spaces">        </code><code class="py plain">credentials </code><code class="py keyword">=</code> <code class="py plain">pickle.load(credentials_dat)</code></div>
<div class="line number23 index22 alt2"><code class="py plain">service </code><code class="py keyword">=</code> <code class="py plain">build(</code><code class="py string">'blogger'</code><code class="py plain">, </code><code class="py string">'v3'</code><code class="py plain">, credentials</code><code class="py keyword">=</code><code class="py plain">credentials)</code></div>
<div class="line number24 index23 alt1"><code class="py plain">g.es(service)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>add_to_blogger 按鈕內容:</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_889095">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
<div class="line number53 index52 alt2">53</div>
<div class="line number54 index53 alt1">54</div>
<div class="line number55 index54 alt2">55</div>
<div class="line number56 index55 alt1">56</div>
<div class="line number57 index56 alt2">57</div>
<div class="line number58 index57 alt1">58</div>
<div class="line number59 index58 alt2">59</div>
<div class="line number60 index59 alt1">60</div>
<div class="line number61 index60 alt2">61</div>
<div class="line number62 index61 alt1">62</div>
<div class="line number63 index62 alt2">63</div>
<div class="line number64 index63 alt1">64</div>
<div class="line number65 index64 alt2">65</div>
<div class="line number66 index65 alt1">66</div>
<div class="line number67 index66 alt2">67</div>
<div class="line number68 index67 alt1">68</div>
<div class="line number69 index68 alt2">69</div>
<div class="line number70 index69 alt1">70</div>
<div class="line number71 index70 alt2">71</div>
<div class="line number72 index71 alt1">72</div>
<div class="line number73 index72 alt2">73</div>
<div class="line number74 index73 alt1">74</div>
<div class="line number75 index74 alt2">75</div>
<div class="line number76 index75 alt1">76</div>
<div class="line number77 index76 alt2">77</div>
<div class="line number78 index77 alt1">78</div>
<div class="line number79 index78 alt2">79</div>
<div class="line number80 index79 alt1">80</div>
<div class="line number81 index80 alt2">81</div>
<div class="line number82 index81 alt1">82</div>
<div class="line number83 index82 alt2">83</div>
<div class="line number84 index83 alt1">84</div>
<div class="line number85 index84 alt2">85</div>
<div class="line number86 index85 alt1">86</div>
<div class="line number87 index86 alt2">87</div>
<div class="line number88 index87 alt1">88</div>
<div class="line number89 index88 alt2">89</div>
<div class="line number90 index89 alt1">90</div>
<div class="line number91 index90 alt2">91</div>
<div class="line number92 index91 alt1">92</div>
<div class="line number93 index92 alt2">93</div>
<div class="line number94 index93 alt1">94</div>
<div class="line number95 index94 alt2">95</div>
<div class="line number96 index95 alt1">96</div>
<div class="line number97 index96 alt2">97</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py decorator">@language</code> <code class="py plain">python</code></div>
<div class="line number2 index1 alt1"><code class="py keyword">from</code> <code class="py plain">markdown </code><code class="py keyword">import</code> <code class="py plain">markdown</code></div>
<div class="line number3 index2 alt2"><code class="py keyword">from</code> <code class="py plain">oauth2client </code><code class="py keyword">import</code> <code class="py plain">client</code></div>
<div class="line number4 index3 alt1"><code class="py comments">#from googleapiclient import sample_tools</code></div>
<div class="line number5 index4 alt2"><code class="py keyword">import</code> <code class="py plain">os</code></div>
<div class="line number6 index5 alt1"><code class="py comments"># 配合使用 credential token</code></div>
<div class="line number7 index6 alt2"><code class="py keyword">import</code> <code class="py plain">pickle</code></div>
<div class="line number8 index7 alt1"><code class="py keyword">from</code> <code class="py plain">googleapiclient.discovery </code><code class="py keyword">import</code> <code class="py plain">build</code></div>
<div class="line number9 index8 alt2"><code class="py comments">#from google_auth_oauthlib.flow import InstalledAppFlow</code></div>
<div class="line number10 index9 alt1"><code class="py comments">#from google.auth.transport.requests import Request</code></div>
<div class="line number11 index10 alt2"> </div>
<div class="line number12 index11 alt1"><code class="py plain">os.environ[</code><code class="py string">'TZ'</code><code class="py plain">] </code><code class="py keyword">=</code> <code class="py string">'Asia/Taipei'</code></div>
<div class="line number13 index12 alt2"><code class="py plain">with </code><code class="py functions">open</code><code class="py plain">(</code><code class="py string">'./../../blogger_credentials.dat'</code><code class="py plain">, </code><code class="py string">'rb'</code><code class="py plain">) as credentials_dat:</code></div>
<div class="line number14 index13 alt1"><code class="py spaces">    </code><code class="py plain">credentials </code><code class="py keyword">=</code> <code class="py plain">pickle.load(credentials_dat)</code></div>
<div class="line number15 index14 alt2"><code class="py plain">service </code><code class="py keyword">=</code> <code class="py plain">build(</code><code class="py string">'blogger'</code><code class="py plain">, </code><code class="py string">'v3'</code><code class="py plain">, credentials</code><code class="py keyword">=</code><code class="py plain">credentials)</code></div>
<div class="line number16 index15 alt1"> </div>
<div class="line number17 index16 alt2"><code class="py keyword">def</code> <code class="py plain">get_cat_tag_content(data):</code></div>
<div class="line number18 index17 alt1"><code class="py spaces">    </code><code class="py comments"># 請注意, 因為 data 來自 .md 的檔案 內容, 第1行為 ---</code></div>
<div class="line number19 index18 alt2"><code class="py spaces">    </code><code class="py comments"># 用跳行符號分割</code></div>
<div class="line number20 index19 alt1"><code class="py spaces">    </code><code class="py plain">data_list </code><code class="py keyword">=</code> <code class="py plain">data.split(</code><code class="py string">"\n"</code><code class="py plain">)</code></div>
<div class="line number21 index20 alt2"><code class="py spaces">    </code><code class="py comments">#第 2 行為 title</code></div>
<div class="line number22 index21 alt1"><code class="py spaces">    </code><code class="py plain">title</code><code class="py keyword">=</code> <code class="py plain">data_list[</code><code class="py value">1</code><code class="py plain">]</code></div>
<div class="line number23 index22 alt2"><code class="py spaces">    </code><code class="py comments">#第 4 行為 category</code></div>
<div class="line number24 index23 alt1"><code class="py spaces">    </code><code class="py plain">category </code><code class="py keyword">=</code> <code class="py plain">data_list[</code><code class="py value">3</code><code class="py plain">]</code></div>
<div class="line number25 index24 alt2"><code class="py spaces">    </code><code class="py comments">#第 5 行為 tags</code></div>
<div class="line number26 index25 alt1"><code class="py spaces">    </code><code class="py plain">tags </code><code class="py keyword">=</code> <code class="py plain">data_list[</code><code class="py value">4</code><code class="py plain">]</code></div>
<div class="line number27 index26 alt2"><code class="py spaces">    </code><code class="py comments"># 有多項資料的 content 型別為數列</code></div>
<div class="line number28 index27 alt1"><code class="py spaces">    </code><code class="py comments"># 再將第 9 行之後的資料數列串回成以跳行隔開的資料</code></div>
<div class="line number29 index28 alt2"><code class="py spaces">    </code><code class="py plain">content </code><code class="py keyword">=</code> <code class="py string">"\n"</code><code class="py plain">.join(data_list[</code><code class="py value">8</code><code class="py plain">:])</code></div>
<div class="line number30 index29 alt1"><code class="py spaces">    </code><code class="py comments"># 先將截斷摘要與內文的 pelican md 檔按符號, 換成 Blogger 的 &lt;!--more--&gt;</code></div>
<div class="line number31 index30 alt2"><code class="py spaces">    </code><code class="py plain">content </code><code class="py keyword">=</code> <code class="py plain">content.replace(</code><code class="py string">'&lt;!-- PELICAN_END_SUMMARY --&gt;'</code><code class="py plain">, </code><code class="py string">'&lt;!--more--&gt;'</code><code class="py plain">)</code></div>
<div class="line number32 index31 alt1"><code class="py spaces">    </code><code class="py comments"># 接著若內容有 ~~~python 與 ~~~ 則換成 Wordpress 格式</code></div>
<div class="line number33 index32 alt2"><code class="py spaces">    </code><code class="py comments">#content = content.replace('~~~python', '[code lang="python"]')</code></div>
<div class="line number34 index33 alt1"><code class="py spaces">    </code><code class="py comments">#content = content.replace('~~~', '[/code]')</code></div>
<div class="line number35 index34 alt2"><code class="py spaces">    </code><code class="py keyword">return</code> <code class="py plain">title, category, tags, content</code></div>
<div class="line number36 index35 alt1"> </div>
<div class="line number37 index36 alt2"><code class="py comments"># 從目前所在節點的 body pan 中取出類別, tags 以及文章內容</code></div>
<div class="line number38 index37 alt1"><code class="py comments"># p.h 為 @clean filename.md</code></div>
<div class="line number39 index38 alt2"><code class="py comments"># 因為要使用 @clean 節點掛上為後的 blogger post_id, 因此改為讀 .md 檔案</code></div>
<div class="line number40 index39 alt1"><code class="py plain">md_filename </code><code class="py keyword">=</code> <code class="py plain">p.h.split(</code><code class="py string">" "</code><code class="py plain">)[</code><code class="py value">1</code><code class="py plain">]</code></div>
<div class="line number41 index40 alt2"><code class="py plain">with </code><code class="py functions">open</code><code class="py plain">(md_filename, </code><code class="py string">'r'</code><code class="py plain">, encoding</code><code class="py keyword">=</code><code class="py string">"utf-8"</code><code class="py plain">) as content_file:</code></div>
<div class="line number42 index41 alt1"><code class="py spaces">    </code><code class="py plain">md_content </code><code class="py keyword">=</code> <code class="py plain">content_file.read()</code></div>
<div class="line number43 index42 alt2"><code class="py comments"># title_str, category_str, tags_str, content = get_cat_tag_content(p.b)</code></div>
<div class="line number44 index43 alt1"><code class="py plain">title_str, category_str, tags_str, content </code><code class="py keyword">=</code> <code class="py plain">get_cat_tag_content(md_content)</code></div>
<div class="line number45 index44 alt2"><code class="py plain">category </code><code class="py keyword">=</code> <code class="py plain">category_str.split(</code><code class="py string">":"</code><code class="py plain">)[</code><code class="py value">1</code><code class="py plain">]</code></div>
<div class="line number46 index45 alt1"><code class="py plain">tags </code><code class="py keyword">=</code> <code class="py plain">tags_str.split(</code><code class="py string">":"</code><code class="py plain">)[</code><code class="py value">1</code><code class="py plain">].split(</code><code class="py string">","</code><code class="py plain">)</code></div>
<div class="line number47 index46 alt2"><code class="py plain">tags.append(category)</code></div>
<div class="line number48 index47 alt1"><code class="py comments"># title 是一個單獨的字串</code></div>
<div class="line number49 index48 alt2"><code class="py plain">title </code><code class="py keyword">=</code> <code class="py plain">title_str.split(</code><code class="py string">":"</code><code class="py plain">)[</code><code class="py value">1</code><code class="py plain">]</code></div>
<div class="line number50 index49 alt1"><code class="py comments"># 將 markdown 格式 content 轉為 html</code></div>
<div class="line number51 index50 alt2"><code class="py plain">content </code><code class="py keyword">=</code> <code class="py plain">markdown(content)</code></div>
<div class="line number52 index51 alt1"><code class="py comments"># 以下處理 content 的 &lt;h2&gt; 標題</code></div>
<div class="line number53 index52 alt2"><code class="py plain">content </code><code class="py keyword">=</code> <code class="py plain">content.replace(</code><code class="py string">"&lt;h2&gt;"</code><code class="py plain">, </code><code class="py string">"&lt;h2&gt;&lt;font size='4'&gt;"</code><code class="py plain">)</code></div>
<div class="line number54 index53 alt1"><code class="py plain">content </code><code class="py keyword">=</code> <code class="py plain">content.replace(</code><code class="py string">"&lt;/h2&gt;"</code><code class="py plain">, </code><code class="py string">"&lt;/font&gt;&lt;/h2&gt;"</code><code class="py plain">)</code></div>
<div class="line number55 index54 alt2"><code class="py comments"># g.es(content)</code></div>
<div class="line number56 index55 alt1"> </div>
<div class="line number57 index56 alt2"><code class="py keyword">try</code><code class="py plain">:</code></div>
<div class="line number58 index57 alt1"><code class="py spaces">    </code><code class="py comments">'''</code></div>
<div class="line number59 index58 alt2"><code class="py spaces">    </code><code class="py comments">users = service.users()</code></div>
<div class="line number60 index59 alt1"><code class="py spaces">    </code><code class="py comments"># 取得使用者 profile 資料</code></div>
<div class="line number61 index60 alt2"><code class="py spaces">    </code><code class="py comments">user = users.get(userId='self').execute()</code></div>
<div class="line number62 index61 alt1"><code class="py spaces">    </code><code class="py comments">print('網誌名稱: %s' % user['displayName'])</code></div>
<div class="line number63 index62 alt2"><code class="py spaces">    </code><code class="py comments">'''</code></div>
<div class="line number64 index63 alt1"><code class="py spaces">    </code><code class="py plain">blogs </code><code class="py keyword">=</code> <code class="py plain">service.blogs()</code></div>
<div class="line number65 index64 alt2"><code class="py spaces">    </code><code class="py comments"># 取得使用者所建立網誌名稱</code></div>
<div class="line number66 index65 alt1"><code class="py spaces">    </code><code class="py plain">blogs </code><code class="py keyword">=</code> <code class="py plain">blogs.listByUser(userId</code><code class="py keyword">=</code><code class="py string">'self'</code><code class="py plain">).execute()</code></div>
<div class="line number67 index66 alt2"><code class="py spaces">    </code><code class="py comments"># post_id is now blogs["items"][0]["id"]</code></div>
<div class="line number68 index67 alt1"><code class="py spaces">    </code><code class="py plain">blog_id </code><code class="py keyword">=</code> <code class="py plain">blogs[</code><code class="py string">"items"</code><code class="py plain">][</code><code class="py value">0</code><code class="py plain">][</code><code class="py string">"id"</code><code class="py plain">]</code></div>
<div class="line number69 index68 alt2"><code class="py spaces">    </code><code class="py comments">#for blog in blogs['items']:</code></div>
<div class="line number70 index69 alt1"><code class="py spaces">        </code><code class="py comments">#print(blog['name'], blog['url'])</code></div>
<div class="line number71 index70 alt2"><code class="py spaces">    </code><code class="py plain">posts </code><code class="py keyword">=</code> <code class="py plain">service.posts()</code></div>
<div class="line number72 index71 alt1"><code class="py spaces">    </code><code class="py comments"># 新增網誌 post 時, 需要 post_id</code></div>
<div class="line number73 index72 alt2"><code class="py spaces">    </code><code class="py plain">body </code><code class="py keyword">=</code> <code class="py plain">{</code></div>
<div class="line number74 index73 alt1"><code class="py spaces">    </code><code class="py string">"kind"</code><code class="py plain">: </code><code class="py string">"blogger#post"</code><code class="py plain">,</code></div>
<div class="line number75 index74 alt2"><code class="py spaces">    </code><code class="py string">"id"</code><code class="py plain">: blog_id,</code></div>
<div class="line number76 index75 alt1"><code class="py spaces">    </code><code class="py string">"title"</code><code class="py plain">: title,</code></div>
<div class="line number77 index76 alt2"><code class="py spaces">    </code><code class="py comments"># 利用 markdown 函式, 將 .md 的內文轉為 html, 作為 Blogger 的文章內容</code></div>
<div class="line number78 index77 alt1"><code class="py spaces">    </code><code class="py string">"content"</code><code class="py plain">: content,</code></div>
<div class="line number79 index78 alt2"><code class="py spaces">    </code><code class="py string">"labels"</code><code class="py plain">: tags</code></div>
<div class="line number80 index79 alt1"><code class="py spaces">    </code><code class="py plain">}</code></div>
<div class="line number81 index80 alt2"><code class="py spaces">    </code><code class="py plain">insert </code><code class="py keyword">=</code> <code class="py plain">posts.insert(blogId</code><code class="py keyword">=</code><code class="py plain">blog_id, body</code><code class="py keyword">=</code><code class="py plain">body)</code></div>
<div class="line number82 index81 alt1"><code class="py spaces">    </code><code class="py plain">posts_doc </code><code class="py keyword">=</code> <code class="py plain">insert.execute()</code></div>
<div class="line number83 index82 alt2"><code class="py spaces">    </code><code class="py plain">post_id </code><code class="py keyword">=</code> <code class="py plain">posts_doc[</code><code class="py string">"id"</code><code class="py plain">]</code></div>
<div class="line number84 index83 alt1"><code class="py spaces">    </code><code class="py comments">#print(posts_doc)</code></div>
<div class="line number85 index84 alt2"><code class="py spaces">    </code><code class="py comments"># 改用 credential token 後不會產生 blogger.dat</code></div>
<div class="line number86 index85 alt1"><code class="py spaces">    </code><code class="py comments">#os.remove("blogger.dat")</code></div>
<div class="line number87 index86 alt2"><code class="py spaces">    </code><code class="py comments"># 利用最後的 child 節點來儲存 post_id</code></div>
<div class="line number88 index87 alt1"><code class="py spaces">    </code><code class="py plain">to_save_post_id </code><code class="py keyword">=</code> <code class="py plain">p.insertAsLastChild()   </code></div>
<div class="line number89 index88 alt2"><code class="py spaces">    </code><code class="py comments"># 改為內文為空的節點, id 直接標在 head 標題 </code></div>
<div class="line number90 index89 alt1"><code class="py spaces">    </code><code class="py plain">to_save_post_id.b </code><code class="py keyword">=</code> <code class="py plain">""</code></div>
<div class="line number91 index90 alt2"><code class="py spaces">    </code><code class="py plain">to_save_post_id.h </code><code class="py keyword">=</code> <code class="py plain">post_id</code></div>
<div class="line number92 index91 alt1"><code class="py spaces">    </code><code class="py comments"># 因為新增節點, commander 必須 redraw</code></div>
<div class="line number93 index92 alt2"><code class="py spaces">    </code><code class="py plain">c.redraw()</code></div>
<div class="line number94 index93 alt1"><code class="py spaces">    </code><code class="py plain">g.es(</code><code class="py string">"post_id 為"</code><code class="py plain">, post_id)</code></div>
<div class="line number95 index94 alt2"><code class="py spaces">    </code><code class="py plain">g.es(</code><code class="py string">"已經將資料送往 Blogger!"</code><code class="py plain">)</code></div>
<div class="line number96 index95 alt1"><code class="py keyword">except</code><code class="py plain">(client.AccessTokenRefreshError):</code></div>
<div class="line number97 index96 alt2"><code class="py spaces">    </code><code class="py plain">g.es(</code><code class="py string">"error"</code><code class="py plain">)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>edit_to_blogger 按鈕內容:</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_860673">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
<div class="line number53 index52 alt2">53</div>
<div class="line number54 index53 alt1">54</div>
<div class="line number55 index54 alt2">55</div>
<div class="line number56 index55 alt1">56</div>
<div class="line number57 index56 alt2">57</div>
<div class="line number58 index57 alt1">58</div>
<div class="line number59 index58 alt2">59</div>
<div class="line number60 index59 alt1">60</div>
<div class="line number61 index60 alt2">61</div>
<div class="line number62 index61 alt1">62</div>
<div class="line number63 index62 alt2">63</div>
<div class="line number64 index63 alt1">64</div>
<div class="line number65 index64 alt2">65</div>
<div class="line number66 index65 alt1">66</div>
<div class="line number67 index66 alt2">67</div>
<div class="line number68 index67 alt1">68</div>
<div class="line number69 index68 alt2">69</div>
<div class="line number70 index69 alt1">70</div>
<div class="line number71 index70 alt2">71</div>
<div class="line number72 index71 alt1">72</div>
<div class="line number73 index72 alt2">73</div>
<div class="line number74 index73 alt1">74</div>
<div class="line number75 index74 alt2">75</div>
<div class="line number76 index75 alt1">76</div>
<div class="line number77 index76 alt2">77</div>
<div class="line number78 index77 alt1">78</div>
<div class="line number79 index78 alt2">79</div>
<div class="line number80 index79 alt1">80</div>
<div class="line number81 index80 alt2">81</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py decorator">@language</code> <code class="py plain">python</code></div>
<div class="line number2 index1 alt1"><code class="py keyword">from</code> <code class="py plain">markdown </code><code class="py keyword">import</code> <code class="py plain">markdown</code></div>
<div class="line number3 index2 alt2"><code class="py keyword">from</code> <code class="py plain">oauth2client </code><code class="py keyword">import</code> <code class="py plain">client</code></div>
<div class="line number4 index3 alt1"><code class="py comments">#from googleapiclient import sample_tools</code></div>
<div class="line number5 index4 alt2"><code class="py keyword">import</code> <code class="py plain">os</code></div>
<div class="line number6 index5 alt1"><code class="py comments"># 配合使用 credential token</code></div>
<div class="line number7 index6 alt2"><code class="py keyword">import</code> <code class="py plain">pickle</code></div>
<div class="line number8 index7 alt1"><code class="py keyword">from</code> <code class="py plain">googleapiclient.discovery </code><code class="py keyword">import</code> <code class="py plain">build</code></div>
<div class="line number9 index8 alt2"><code class="py comments">#from google_auth_oauthlib.flow import InstalledAppFlow</code></div>
<div class="line number10 index9 alt1"><code class="py comments">#from google.auth.transport.requests import Request</code></div>
<div class="line number11 index10 alt2"> </div>
<div class="line number12 index11 alt1"><code class="py plain">os.environ[</code><code class="py string">'TZ'</code><code class="py plain">] </code><code class="py keyword">=</code> <code class="py string">'Asia/Taipei'</code></div>
<div class="line number13 index12 alt2"><code class="py plain">with </code><code class="py functions">open</code><code class="py plain">(</code><code class="py string">'./../../blogger_credentials.dat'</code><code class="py plain">, </code><code class="py string">'rb'</code><code class="py plain">) as credentials_dat:</code></div>
<div class="line number14 index13 alt1"><code class="py spaces">    </code><code class="py plain">credentials </code><code class="py keyword">=</code> <code class="py plain">pickle.load(credentials_dat)</code></div>
<div class="line number15 index14 alt2"><code class="py plain">service </code><code class="py keyword">=</code> <code class="py plain">build(</code><code class="py string">'blogger'</code><code class="py plain">, </code><code class="py string">'v3'</code><code class="py plain">, credentials</code><code class="py keyword">=</code><code class="py plain">credentials)</code></div>
<div class="line number16 index15 alt1"> </div>
<div class="line number17 index16 alt2"><code class="py keyword">def</code> <code class="py plain">get_cat_tag_content(data):</code></div>
<div class="line number18 index17 alt1"><code class="py spaces">    </code><code class="py comments"># 請注意, 因為 data 來自 .md 的檔案 內容, 第1行為 ---</code></div>
<div class="line number19 index18 alt2"><code class="py spaces">    </code><code class="py comments"># 用跳行符號分割</code></div>
<div class="line number20 index19 alt1"><code class="py spaces">    </code><code class="py plain">data_list </code><code class="py keyword">=</code> <code class="py plain">data.split(</code><code class="py string">"\n"</code><code class="py plain">)</code></div>
<div class="line number21 index20 alt2"><code class="py spaces">    </code><code class="py comments">#第 2 行為 title</code></div>
<div class="line number22 index21 alt1"><code class="py spaces">    </code><code class="py plain">title</code><code class="py keyword">=</code> <code class="py plain">data_list[</code><code class="py value">1</code><code class="py plain">]</code></div>
<div class="line number23 index22 alt2"><code class="py spaces">    </code><code class="py comments">#第 4 行為 category</code></div>
<div class="line number24 index23 alt1"><code class="py spaces">    </code><code class="py plain">category </code><code class="py keyword">=</code> <code class="py plain">data_list[</code><code class="py value">3</code><code class="py plain">]</code></div>
<div class="line number25 index24 alt2"><code class="py spaces">    </code><code class="py comments">#第 5 行為 tags</code></div>
<div class="line number26 index25 alt1"><code class="py spaces">    </code><code class="py plain">tags </code><code class="py keyword">=</code> <code class="py plain">data_list[</code><code class="py value">4</code><code class="py plain">]</code></div>
<div class="line number27 index26 alt2"><code class="py spaces">    </code><code class="py comments"># 有多項資料的 content 型別為數列</code></div>
<div class="line number28 index27 alt1"><code class="py spaces">    </code><code class="py comments"># 再將第 9 行之後的資料數列串回成以跳行隔開的資料</code></div>
<div class="line number29 index28 alt2"><code class="py spaces">    </code><code class="py plain">content </code><code class="py keyword">=</code> <code class="py string">"\n"</code><code class="py plain">.join(data_list[</code><code class="py value">8</code><code class="py plain">:])</code></div>
<div class="line number30 index29 alt1"><code class="py spaces">    </code><code class="py comments"># 先將截斷摘要與內文的 pelican md 檔按符號, 換成 Blogger 的 &lt;!--more--&gt;</code></div>
<div class="line number31 index30 alt2"><code class="py spaces">    </code><code class="py plain">content </code><code class="py keyword">=</code> <code class="py plain">content.replace(</code><code class="py string">'&lt;!-- PELICAN_END_SUMMARY --&gt;'</code><code class="py plain">, </code><code class="py string">'&lt;!--more--&gt;'</code><code class="py plain">)</code></div>
<div class="line number32 index31 alt1"><code class="py spaces">    </code><code class="py comments"># 接著若內容有 ~~~python 與 ~~~ 則換成 Wordpress 格式</code></div>
<div class="line number33 index32 alt2"><code class="py spaces">    </code><code class="py comments">#content = content.replace('~~~python', '[code lang="python"]')</code></div>
<div class="line number34 index33 alt1"><code class="py spaces">    </code><code class="py comments">#content = content.replace('~~~', '[/code]')</code></div>
<div class="line number35 index34 alt2"><code class="py spaces">    </code><code class="py keyword">return</code> <code class="py plain">title, category, tags, content</code></div>
<div class="line number36 index35 alt1"> </div>
<div class="line number37 index36 alt2"><code class="py comments"># 從目前所在節點的 body pan 中取出類別, tags 以及文章內容</code></div>
<div class="line number38 index37 alt1"><code class="py comments"># p.h 為 @clean filename.md</code></div>
<div class="line number39 index38 alt2"><code class="py comments"># 因為要使用 @clean 節點掛上為後的 blogger post_id, 因此改為讀 .md 檔案</code></div>
<div class="line number40 index39 alt1"><code class="py plain">md_filename </code><code class="py keyword">=</code> <code class="py plain">p.h.split(</code><code class="py string">" "</code><code class="py plain">)[</code><code class="py value">1</code><code class="py plain">]</code></div>
<div class="line number41 index40 alt2"><code class="py plain">with </code><code class="py functions">open</code><code class="py plain">(md_filename, </code><code class="py string">'r'</code><code class="py plain">, encoding</code><code class="py keyword">=</code><code class="py string">"utf-8"</code><code class="py plain">) as content_file:</code></div>
<div class="line number42 index41 alt1"><code class="py spaces">    </code><code class="py plain">md_content </code><code class="py keyword">=</code> <code class="py plain">content_file.read()</code></div>
<div class="line number43 index42 alt2"><code class="py comments"># title_str, category_str, tags_str, content = get_cat_tag_content(p.b)</code></div>
<div class="line number44 index43 alt1"><code class="py plain">title_str, category_str, tags_str, content </code><code class="py keyword">=</code> <code class="py plain">get_cat_tag_content(md_content)</code></div>
<div class="line number45 index44 alt2"><code class="py plain">category </code><code class="py keyword">=</code> <code class="py plain">category_str.split(</code><code class="py string">":"</code><code class="py plain">)[</code><code class="py value">1</code><code class="py plain">]</code></div>
<div class="line number46 index45 alt1"><code class="py plain">tags </code><code class="py keyword">=</code> <code class="py plain">tags_str.split(</code><code class="py string">":"</code><code class="py plain">)[</code><code class="py value">1</code><code class="py plain">].split(</code><code class="py string">","</code><code class="py plain">)</code></div>
<div class="line number47 index46 alt2"><code class="py plain">tags.append(category)</code></div>
<div class="line number48 index47 alt1"><code class="py comments"># title 是一個單獨的字串</code></div>
<div class="line number49 index48 alt2"><code class="py plain">title </code><code class="py keyword">=</code> <code class="py plain">title_str.split(</code><code class="py string">":"</code><code class="py plain">)[</code><code class="py value">1</code><code class="py plain">]</code></div>
<div class="line number50 index49 alt1"><code class="py comments"># 將 markdown 格式 content 轉為 html</code></div>
<div class="line number51 index50 alt2"><code class="py plain">content </code><code class="py keyword">=</code> <code class="py plain">markdown(content)</code></div>
<div class="line number52 index51 alt1"><code class="py comments"># 以下處理 content 的 &lt;h2&gt; 標題</code></div>
<div class="line number53 index52 alt2"><code class="py plain">content </code><code class="py keyword">=</code> <code class="py plain">content.replace(</code><code class="py string">"&lt;h2&gt;"</code><code class="py plain">, </code><code class="py string">"&lt;h2&gt;&lt;font size='4'&gt;"</code><code class="py plain">)</code></div>
<div class="line number54 index53 alt1"><code class="py plain">content </code><code class="py keyword">=</code> <code class="py plain">content.replace(</code><code class="py string">"&lt;/h2&gt;"</code><code class="py plain">, </code><code class="py string">"&lt;/font&gt;&lt;/h2&gt;"</code><code class="py plain">)</code></div>
<div class="line number55 index54 alt2"><code class="py comments"># g.es(content)</code></div>
<div class="line number56 index55 alt1"> </div>
<div class="line number57 index56 alt2"><code class="py keyword">try</code><code class="py plain">:</code></div>
<div class="line number58 index57 alt1"><code class="py spaces">    </code><code class="py plain">blogs </code><code class="py keyword">=</code> <code class="py plain">service.blogs()</code></div>
<div class="line number59 index58 alt2"><code class="py spaces">    </code><code class="py comments"># 取得使用者所建立網誌名稱</code></div>
<div class="line number60 index59 alt1"><code class="py spaces">    </code><code class="py plain">blogs </code><code class="py keyword">=</code> <code class="py plain">blogs.listByUser(userId</code><code class="py keyword">=</code><code class="py string">'self'</code><code class="py plain">).execute()</code></div>
<div class="line number61 index60 alt2"><code class="py spaces">    </code><code class="py plain">blog_id </code><code class="py keyword">=</code> <code class="py plain">blogs[</code><code class="py string">"items"</code><code class="py plain">][</code><code class="py value">0</code><code class="py plain">][</code><code class="py string">"id"</code><code class="py plain">]</code></div>
<div class="line number62 index61 alt1"><code class="py spaces">    </code><code class="py comments"># 設法取得原 post 的 id</code></div>
<div class="line number63 index62 alt2"><code class="py spaces">    </code><code class="py plain">postid_outline </code><code class="py keyword">=</code> <code class="py plain">p.getLastChild()</code></div>
<div class="line number64 index63 alt1"><code class="py spaces">    </code><code class="py comments"># 直接從標題取得 post 的 id 號碼</code></div>
<div class="line number65 index64 alt2"><code class="py spaces">    </code><code class="py plain">post_id </code><code class="py keyword">=</code> <code class="py plain">postid_outline.h</code></div>
<div class="line number66 index65 alt1"><code class="py spaces">    </code><code class="py plain">posts </code><code class="py keyword">=</code> <code class="py plain">service.posts()</code></div>
<div class="line number67 index66 alt2"><code class="py spaces">    </code><code class="py comments"># 更新網誌文章時的 body</code></div>
<div class="line number68 index67 alt1"><code class="py spaces">    </code><code class="py plain">body </code><code class="py keyword">=</code> <code class="py plain">{</code></div>
<div class="line number69 index68 alt2"><code class="py spaces">    </code><code class="py string">"kind"</code><code class="py plain">: </code><code class="py string">"blogger#post"</code><code class="py plain">,</code></div>
<div class="line number70 index69 alt1"><code class="py spaces">    </code><code class="py string">"title"</code><code class="py plain">: title,</code></div>
<div class="line number71 index70 alt2"><code class="py spaces">    </code><code class="py string">"content"</code><code class="py plain">: content</code></div>
<div class="line number72 index71 alt1"><code class="py spaces">    </code><code class="py plain">}</code></div>
<div class="line number73 index72 alt2"><code class="py spaces">    </code><code class="py comments"># need to save postId to outline head</code></div>
<div class="line number74 index73 alt1"><code class="py spaces">    </code><code class="py plain">update </code><code class="py keyword">=</code> <code class="py plain">posts.update(blogId</code><code class="py keyword">=</code><code class="py plain">blog_id, postId</code><code class="py keyword">=</code><code class="py plain">post_id, body</code><code class="py keyword">=</code><code class="py plain">body, publish</code><code class="py keyword">=</code><code class="py color1">True</code><code class="py plain">)</code></div>
<div class="line number75 index74 alt2"><code class="py spaces">    </code><code class="py plain">update_doc </code><code class="py keyword">=</code> <code class="py plain">update.execute()</code></div>
<div class="line number76 index75 alt1"><code class="py spaces">    </code><code class="py comments"># 使用 credential token 後, 無需刪除 blogger.dat</code></div>
<div class="line number77 index76 alt2"><code class="py spaces">    </code><code class="py comments">#os.remove("blogger.dat")</code></div>
<div class="line number78 index77 alt1"><code class="py spaces">    </code><code class="py plain">g.es(</code><code class="py string">"post_id 為"</code><code class="py plain">, post_id)</code></div>
<div class="line number79 index78 alt2"><code class="py spaces">    </code><code class="py plain">g.es(</code><code class="py string">"已經將更新資料送往 Blogger!"</code><code class="py plain">)</code></div>
<div class="line number80 index79 alt1"><code class="py keyword">except</code><code class="py plain">(client.AccessTokenRefreshError):</code></div>
<div class="line number81 index80 alt2"><code class="py spaces">    </code><code class="py plain">g.es(</code><code class="py string">"error"</code><code class="py plain">)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<br/><br/><br/>
<p></p>
<p></p>
<p></p>